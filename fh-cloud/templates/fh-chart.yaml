apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: "{{.Release.Name}}-fh-chart"
  labels:
    app.kubernetes.io/managed-by: {{.Release.Service | quote }}
    app.kubernetes.io/instance: {{.Release.Name | quote }}
    helm.sh/chart: "{{.Chart.Name}}-{{.Chart.Version}}"
    app.kubernetes.io/name: "{{.Release.Name}}-fh-chart"
spec:
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: "{{.Release.Name}}-fh-chart"
    spec:
      containers:
      - image: {{ index .Values "fh-chart" "image" }}
        name: "{{.Release.Name}}-fh-chart"
        ports:
          - containerPort: 80
        resources: {}
        volumeMounts:
        - name: "{{.Release.Name}}-fh-chart-config"
          mountPath: /usr/share/nginx/html/assets
        - name: "{{.Release.Name}}-fh-chart-config"
          mountPath: /usr/share/nginx/html/charts/assets
      volumes:
      - name: "{{.Release.Name}}-fh-chart-config"
        configMap:
          name: "{{.Release.Name}}-fh-chart-config"
      restartPolicy: Always
status: {}
---
kind: Service
apiVersion: v1
metadata:
  name: "{{.Release.Name}}-fh-chart-service"
  labels:
    app.kubernetes.io/name: "{{.Release.Name}}-fh-chart"
spec:
  selector:
    app.kubernetes.io/name: "{{.Release.Name}}-fh-chart"
  {{- if (index .Values "fh-ingress" "enabled") }}
  type: NodePort
  {{- end }}
  {{- if not (index .Values "fh-ingress" "enabled") }}
  type: LoadBalancer
  {{- end }}
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: "{{.Release.Name}}-fh-chart-config"
  selfLink: /api/v1/namespaces/default/configmaps/fh-chart-config
data:
  env.json: |-
    {
      "apiUrl": {{ index .Values "fh-chart" "apiUrl" | quote }}
    }